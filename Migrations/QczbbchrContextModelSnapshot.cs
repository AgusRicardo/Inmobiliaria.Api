// <auto-generated />
using System;
using Inmobiliaria.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Inmobiliaria.Migrations
{
    [DbContext(typeof(QczbbchrContext))]
    partial class QczbbchrContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Inmobiliaria.Models.Contrato", b =>
                {
                    b.Property<int>("id_contrato")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_contrato"));

                    b.Property<DateOnly>("fecha_alta")
                        .HasColumnType("date");

                    b.Property<DateOnly>("fecha_fin")
                        .HasColumnType("date");

                    b.Property<DateOnly>("fecha_inicio")
                        .HasColumnType("date");

                    b.Property<int>("id_garante")
                        .HasColumnType("integer");

                    b.Property<int>("id_inquilino")
                        .HasColumnType("integer");

                    b.Property<int>("id_propiedad")
                        .HasColumnType("integer");

                    b.Property<int>("id_propietario")
                        .HasColumnType("integer");

                    b.Property<decimal>("monto")
                        .HasColumnType("numeric");

                    b.HasKey("id_contrato");

                    b.HasIndex("id_garante");

                    b.HasIndex("id_inquilino");

                    b.HasIndex("id_propiedad");

                    b.HasIndex("id_propietario");

                    b.ToTable("Contratos", (string)null);
                });

            modelBuilder.Entity("Inmobiliaria.Models.Garante", b =>
                {
                    b.Property<int>("id_garante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_garante"));

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("dni")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("fecha_alta")
                        .HasColumnType("date");

                    b.Property<string>("garantia")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id_garante");

                    b.ToTable("Garantes", (string)null);
                });

            modelBuilder.Entity("Inmobiliaria.Models.Inquilino", b =>
                {
                    b.Property<int>("id_inquilino")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_inquilino"));

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("dni")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("fecha_alta")
                        .HasColumnType("date");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id_inquilino");

                    b.ToTable("Inquilinos", (string)null);
                });

            modelBuilder.Entity("Inmobiliaria.Models.Persona", b =>
                {
                    b.Property<int>("PersonaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PersonaId"));

                    b.Property<string>("Apellido")
                        .HasColumnType("text");

                    b.Property<string>("Dni")
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.HasKey("PersonaId");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("Inmobiliaria.Models.Propiedad", b =>
                {
                    b.Property<int>("id_propiedad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_propiedad"));

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("fecha_alta")
                        .HasColumnType("date");

                    b.Property<int>("id_propietario")
                        .HasColumnType("integer");

                    b.Property<string>("tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id_propiedad");

                    b.HasIndex("id_propietario");

                    b.ToTable("Propiedades", (string)null);
                });

            modelBuilder.Entity("Inmobiliaria.Models.Propietario", b =>
                {
                    b.Property<int>("id_propietario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_propietario"));

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("dni")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("fecha_alta")
                        .HasColumnType("date");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id_propietario");

                    b.ToTable("Propietarios", (string)null);
                });

            modelBuilder.Entity("Inmobiliaria.Models.Usuario", b =>
                {
                    b.Property<int>("User_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("User_id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Rol")
                        .HasColumnType("text");

                    b.HasKey("User_id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Inmobiliaria.Models.Contrato", b =>
                {
                    b.HasOne("Inmobiliaria.Models.Garante", "Garante")
                        .WithMany("Contrato")
                        .HasForeignKey("id_garante")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inmobiliaria.Models.Inquilino", "Inquilino")
                        .WithMany("Contrato")
                        .HasForeignKey("id_inquilino")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inmobiliaria.Models.Propiedad", "Propiedad")
                        .WithMany()
                        .HasForeignKey("id_propiedad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inmobiliaria.Models.Propietario", "Propietario")
                        .WithMany()
                        .HasForeignKey("id_propietario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Garante");

                    b.Navigation("Inquilino");

                    b.Navigation("Propiedad");

                    b.Navigation("Propietario");
                });

            modelBuilder.Entity("Inmobiliaria.Models.Propiedad", b =>
                {
                    b.HasOne("Inmobiliaria.Models.Propietario", "Propietario")
                        .WithMany("Propiedad")
                        .HasForeignKey("id_propietario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Propietario");
                });

            modelBuilder.Entity("Inmobiliaria.Models.Garante", b =>
                {
                    b.Navigation("Contrato");
                });

            modelBuilder.Entity("Inmobiliaria.Models.Inquilino", b =>
                {
                    b.Navigation("Contrato");
                });

            modelBuilder.Entity("Inmobiliaria.Models.Propietario", b =>
                {
                    b.Navigation("Propiedad");
                });
#pragma warning restore 612, 618
        }
    }
}
